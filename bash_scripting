#!/bin/bash

/bin/bash -i -c "command" if you're using another shell

# -----------------------
#        VARIABLES
# -----------------------
${FOO-val}     # echo "val" if FOO unset
${FOO:-val}    # echo "val" if FOO unset (or null)
${FOO+val}     # echo "val" if FOO set
${FOO:+val}    # echo "val" if FOO set (and not null)
${FOO:=val}    # FOO="val" if FOO unset (or null)
${FOO:?msg}    # show msg and exit if $FOO is unset (or null)

# -----------------------
#     SHELL EXECUTION
# -----------------------
echo $(whoami) # shows backslash and permits nesting
echo `whoami`  # doesn't

# -----------------------
#  CONDITIONAL EXECUTION
# -----------------------
"command1" && "command2" # command2 is executed if command1 succeeds
"command1" || "command2" # command2 is executed if command1 fails

# -----------------------
#      REDIRECTIONS
# -----------------------
# STDIN
command < file         # redirect the file to a command
command << EOF         # redirect keyboard to a command until EOF
command <<< string     # redirect a string to a command
wc <(ls ./)            # process substitution: output goes to a temporary file
diff <(ls /bin) <(ls /usr/bin)
wc < <(ls ./)          # similar to piping stdout of ls ./

# STDOUT
command >         # overwrites to file
command >>        # appends to a file

# STDERR
command 2>

# STDOUT & STDERR
command &> /dev/null      # preferred version
command >& /dev/null
command > /dev/null 2>&1  # semantically equivalent
command 2> /dev/null >&2

# -----------------------
#  POSITIONAL PARAMETERS
# -----------------------
$*    # all positional arguments (as a single word)
$@    # all positional arguments (as separate strings)
$#    # number of arguments
$_    # last argument of previous command
$1    # first argument
$2    # second
$3    # ...

# --------------------
#  SPECIAL PARAMETERS
# --------------------
$?    # exit status of the previous task
$!    # PID of the last background task
$$    # PID of the shell
$0    # filename of the shell script
$-    # show the currently active shell options

# --------------------
#    TESTING FILES
# --------------------
-e    # if the file exists e.g. [ -e filename ]
-d    # if the file is a directory
-f    # if the file is a regular file (i.e. not a symbolic link, directory, etc.)
-s    # if the file is of non-zero size
-g    # if the file has sgid set
-u    # if the file has suid set
-r    # if the file is readable
-w    # if the file is writable
-x    # if the file is executable
-z    # if the string is null

# --------------------
#   NUMERICAL TESTS
# --------------------
-eq    # Equal to e.g. if [[ $age -eq 20 ]]
-ne    # Not equal to
-gt    # Greater than
-lt    # Less than
-ge    # Greater than or equal to
-le    # Less than or equal to

# --------------------
#       LOOPS
# --------------------
# FOR
for f in linux/photos/*.jpg
do
	echo "Un fichier image: $f"
done

for p in $@ # or range {5..10}
do
	echo "paramètre : $p"
done

# WHILE
while [ $# -gt 2 ]
do
	echo "args: $@"
	case "$1" in
		-f) FORCE=1
		    echo "option -f activée";;
		-di) shift
		     DELIMITER=$1
		     echo "option -di activée";;
		*) echo -e "\noption inconnue : $1"
		   exit -1;;
	esac
	shift
done

# -----------------------
#  PARAMETER EXPANSIONS
# -----------------------
IMAGE=IMG_la_maison_sur_la_coline.jpg
IM_EXT=.jpg

# BASICS
# Manipulation
echo ${IMAGE}       # IMG_la_maison_sur_la_coline.jpg
echo ${#IMAGE}      # 31
echo ${IMAGE,}      # iMG_la_maison_sur_la_coline.jpg
echo ${IMAGE,,}     # img_la_maison_sur_la_coline.jpg
echo ${IMAGE^}      # IMG_la_maison_sur_la_coline.jpg
echo ${IMAGE^^}     # IMG_LA_MAISON_SUR_LA_COLINE.JPG
# Slicing
echo ${IMAGE:4}      # la_maison_sur_la_coline.jpg
echo ${IMAGE:(-1)}   # g
echo ${IMAGE:4:6}    # la_mai
echo ${IMAGE:0:2}    # IM
echo ${IMAGE::2}     # IM
echo ${IMAGE::-4}    # IMG_la_maison_sur_la_coline
echo ${IMAGE:(-2):1} # p
# Show
echo ${!IM*}         # IMAGE IM_EXT
echo ${!IM@}         # IMAGE IM_EXT (as separate strings)

# SUBSTITUTION
# Prefix
echo ${IMAGE#*_}       # la_maison_sur_la_coline.jpg
echo ${IMAGE##*_}      # coline.jpg
# Suffic
echo ${IMAGE%.jpg}     # IMG_la_maison_sur_la_coline
echo ${IMAGE%$IM_EXT}  # IMG_la_maison_sur_la_coline
# Replace
echo ${IMAGE/l/L}      # IMG_La_maison_sur_la_coline.jpg
echo ${IMAGE//l/L}     # IMG_La_maison_sur_La_coLine.jpg
# Combination
echo ${IMAGE/%.jpg/.png}   # IMG_la_maison_sur_la_coline.png

# Visit the following website for more information:
# https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
